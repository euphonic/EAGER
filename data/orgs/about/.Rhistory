inner_join(in.ass_first_year, by = c("lookup_firm")) %>%
inner_join(num_patents_all_by_firm, by = c("lookup_firm")) %>% inner_join(num_patents_3_by_firm, by = c("lookup_firm")) %>%
inner_join(mean_assignees_all_by_firm, by = c("lookup_firm")) %>% inner_join(mean_assignees_3_by_firm, by = c("lookup_firm")) %>%
inner_join(mean_inventors_all_by_size, by = c("lookup_firm")) %>% inner_join(mean_inventors_3_by_size, by = c("lookup_firm")))
firm_level_measures <- in.eager_assignee %>% # 1,487
left_join (in.web_pages_all, by =c("lookup_firm_web" = "firm_name")) %>%
left_join(in.ass_first_year, by = c("lookup_firm")) %>%
left_join(num_patents_all_by_firm, by = c("lookup_firm")) %>% left_join(num_patents_3_by_firm, by = c("lookup_firm")) %>%
left_join(mean_assignees_all_by_firm, by = c("lookup_firm")) %>% left_join(mean_assignees_3_by_firm, by = c("lookup_firm")) %>%
left_join(mean_inventors_all_by_size, by = c("lookup_firm")) %>% left_join(mean_inventors_3_by_size, by = c("lookup_firm"))
nrow(firm_level_measures)
# firm_level_patent_plus_emp_measures[is.na(firm_level_patent_plus_emp_measures)] <- 0
# firm_level_patent_plus_emp_measures[firm_level_patent_plus_emp_measures == ""] <- 0
View(firm_level_measures)
write.csv(firm_level_measures, "firm_level_measures.csv", row.names = FALSE)
# check percent of small firms with website data
nrow (firm_level_measures[firm_level_measures$size_state != 'FirmSize.UNDEFINED' &
firm_level_measures$sme == 1, ])
nrow (firm_level_measures[firm_level_measures$size_state != 'FirmSize.UNDEFINED' &
firm_level_measures$sme == 1, ])
nrow (firm_level_measures[firm_level_measures$size_state != 'FirmSize.UNDEFINED' &
firm_level_measures$sme == 1 &
! is.na(firm_level_measures$pages), ])
library(dplyr)
library(extrafont)
# font_import()
loadfonts(device = "pdf")
library (ggplot2)
library(scales)
setwd("/Users/Sanjay/dev/EAGER/data/patents/measures/")
# BASIC THEME
theme.eager_chart <-
theme(legend.position = "none") +
theme(plot.title = element_text(size=26, family="Trebuchet MS", face="bold", hjust=0, color="#666666")) +
theme(axis.title = element_text(size=18, family="Trebuchet MS", face="bold", color="#666666")) +
theme(axis.title.y = element_text(angle=0)) +
theme(axis.text=element_text(size=10, family="Trebuchet MS", color="#666666"))
# SCATTERPLOT THEME
theme.eager_chart_SCATTER <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# HISTOGRAM THEME
theme.eager_chart_HIST <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# SMALL MULTIPLE THEME
theme.eager_chart_SMALLM <- theme.eager_chart +
theme(panel.grid.minor = element_blank()) +
theme(strip.text.x = element_text(size=16, family="Trebuchet MS", face="bold", color="#666666"))
# load data
in.ass_all <- read.csv("assignees_overall.csv", header = TRUE, stringsAsFactors = FALSE)
in.ass_3 <- read.csv("assignees_3industries.csv", header = TRUE, stringsAsFactors = FALSE)
in.ass_3$patent_id <- as.character(in.ass_3$patent_id)
in.inv_all <- read.csv("inventors_overall.csv", header = TRUE, stringsAsFactors = FALSE)
in.inv_3 <- read.csv("inventors_3industries.csv", header = TRUE)
in.inv_3$patent_id <- as.character(in.inv_3$patent_id)
in.pat_3 <- read.csv("patents_3industries.csv", header = TRUE, stringsAsFactors = FALSE)
in.pat_all <- read.csv("patents_overall.csv", header = TRUE, stringsAsFactors = FALSE)
in.ass_first_year <- read.csv("assignees_first-year.csv", header = TRUE, stringsAsFactors = FALSE)
in.lookup <- read.csv("assignee-2-patent-lookup.csv", header = TRUE, stringsAsFactors = FALSE)
in.eager_assignee <- read.csv("..//eager_assignee.csv", header = TRUE, stringsAsFactors = FALSE)
in.eager_assignee$max_emps <- as.numeric(gsub(",", "", in.eager_assignee$max_emps))
in.eager_assignee$sme <- 1
colnames (in.eager_assignee)
nrow(in.eager_assignee)
nrow(in.eager_assignee[in.eager_assignee$size_state == 'FirmSize.UNDEFINED',]) # == 97
# nrow(in.eager_assignee[in.eager_assignee$hit_url == '',]) # == 199
in.eager_assignee <- in.eager_assignee[in.eager_assignee$size_state != 'FirmSize.UNDEFINED' ,]
nrow(in.eager_assignee)
nrow(in.eager_assignee) - nrow (in.eager_assignee[in.eager_assignee$hit_url == '', ]) # firms with urls
in.eager_assignee[which(in.eager_assignee$size_state == 'FirmSize.LARGE_FIRM'), 22] <- 0
nrow(in.eager_assignee[in.eager_assignee$sme == 1, ])
nrow(in.eager_assignee[in.eager_assignee$sme == 0, ])
in.eager_assignee <- in.eager_assignee[,c(1,2,3,8,16:22)]
in.web_pages <- read.csv("..//..//orgs//about//about_predicted_and_labels.csv", header = TRUE, stringsAsFactors = FALSE) # just about page measures
in.web_pages_all <- read.csv("..//..//analysis//measures//simple_web_measures_v2.csv", header = TRUE, stringsAsFactors = FALSE)
in.web_pages_all$avg_words_per_page = in.web_pages_all$num_words / in.web_pages_all$pages
nrow (in.web_pages)
nrow(in.web_pages_all)
# number of small vs large firms
head(in.pat_all)
nrow(in.pat_all)
head (in.eager_assignee)
count_assignees_by_size <- in.pat_all %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% count(sme)
count_assignees_by_size
anti_join(in.pat_all, in.eager_assignee, by = c("organization_clnd" = "lookup_firm"))
nrow(anti_join(in.eager_assignee, in.pat_all, by = c("lookup_firm" = "organization_clnd")))
count_assignees_by_size
# average number of employees
mean_emps_by_size <- in.eager_assignee  %>% group_by(sme) %>% summarize(mean = mean(max_emps, na.rm=TRUE))
mean_emps_by_size
# avg first year
head (in.ass_first_year)
nrow (in.ass_first_year %>% inner_join(in.eager_assignee, by = "lookup_firm"))
View(anti_join(in.eager_assignee, in.ass_first_year, by = "lookup_firm"))
mean_first_year_by_size <- in.ass_first_year %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(year.min.p..date..., na.rm=TRUE))
mean_first_year_by_size
# mean number of patents all
mean_patents_all_by_size <- in.pat_all %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(count.p.id., na.rm=TRUE))
mean_patents_all_by_size
# mean number of patents 3 industries
mean_patents_3_by_size <- in.pat_3 %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(count.epa.id., na.rm=TRUE))
mean_patents_3_by_size
# average number of assignees all
head (in.ass_all)
mean_assignees_all_by_size <- in.ass_all %>% inner_join(in.lookup, by = "patent_id") %>% group_by(lookup_firm)  %>%
summarize(mean = mean( count.pa.assignee_id., na.rm=TRUE)) %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(mean, na.rm=TRUE))
mean_assignees_all_by_size
# average number of assignees 3 industries
head (in.ass_3)
mean_assignees_3_by_size <- in.ass_3 %>% inner_join(in.lookup, by = "patent_id") %>% group_by(lookup_firm)  %>%
summarize(mean = mean( count.pa.assignee_id., na.rm=TRUE)) %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(mean, na.rm=TRUE))
mean_assignees_3_by_size
# average number of inventors all
head (in.inv_all)
mean_inventors_all_by_size <- in.inv_all %>% inner_join(in.lookup, by = "patent_id") %>% group_by(lookup_firm)  %>%
summarize(mean = mean( count.pi.inventor_id., na.rm=TRUE)) %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(mean, na.rm=TRUE))
mean_inventors_all_by_size
# average number of inventors 3 industries
head (in.inv_3)
mean_inventors_3_by_size <- in.inv_3 %>% inner_join(in.lookup, by = "patent_id") %>% group_by(lookup_firm)  %>%
summarize(mean = mean( count.pi.inventor_id., na.rm=TRUE)) %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(mean, na.rm=TRUE))
mean_inventors_3_by_size
# prep website data by aggregating on firm
head (in.web_pages)
firm_about_page_measures = in.web_pages %>% group_by(firm_name)  %>%
summarize (about_gen.count = n(), about_exact.count = sum(is_about), default_to_home = sum(default_to_home))
head (firm_about_page_measures)
patents_web_emps_about <- in.pat_all %>% inner_join(in.eager_assignee, by = "lookup_firm") %>%
inner_join(firm_about_page_measures, by = c("lookup_firm_web" = "firm_name"))
nrow (patents_web_emps_about)
g1.df <- patents_web_emps_about %>% arrange(max_emps) %>% as.data.frame()
nrow (g1.df)
g2.df <- patents_web_emps_all %>% arrange(max_emps) %>% as.data.frame()
nrow (g2.df)
patents_web_emps_all <- in.pat_all %>% inner_join(in.eager_assignee, by = "lookup_firm") %>%
inner_join(in.web_pages_all, by = c("lookup_firm_web" = "firm_name"))
nrow(patents_web_emps_all)
setwd("/Users/Sanjay/dev/EAGER/data/orgs/about/")
# load data
in.res <- read.csv("about_model_training_results_toR.csv", header = TRUE, stringsAsFactors = FALSE)
in.res
# BASIC THEME
theme.eager_chart <-
theme(legend.position = "none") +
theme(plot.title = element_text(size=26, family="Trebuchet MS", face="bold", hjust=0, color="#666666")) +
theme(axis.title = element_text(size=18, family="Trebuchet MS", face="bold", color="#666666")) +
theme(axis.title.y = element_text(angle=0))
# SCATTERPLOT THEME
theme.eager_chart_SCATTER <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# LINE THEME
theme.eager_chart_LINE <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# HISTOGRAM THEME
theme.eager_chart_HIST <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# SMALL MULTIPLE THEME
theme.eager_chart_SMALLM <- theme.eager_chart +
theme(panel.grid.minor = element_blank()) +
theme(strip.text.x = element_text(size=16, family="Trebuchet MS", face="bold", color="#666666"))
g10.df <- in.res[c(1,3,4,6,7,9) ,]
g10.df
colnames(g10.df)
g10 <- ggplot(data=g10.df, aes(x=Name)) +
geom_line(aes(y=Count.based.features, colour="var0"), group=1, size=1.25) +
geom_point(aes(y=Count.based.features)) +
geom_line(aes(y=Text.features, colour="var1"), group=1, size=1.25) +
geom_point(aes(y=Text.features)) +
# geom_line(aes(y=All.features.minus.header.text, colour="var2"), group=1, size=1.25) +
geom_line(aes(y=All.features, colour="var3"), group=1, size=1.25) +
geom_point(aes(y=All.features)) +
labs(x="Name", y="Accuracy") +
theme.eager_chart_SCATTER
g10
colnames(g10.df)
g10 <- ggplot(data=g10.df, aes(x=Name)) +
geom_line(aes(y=Count.features, colour="var0"), group=1, size=1.25) +
geom_point(aes(y=Count.features)) +
geom_line(aes(y=Text.features, colour="var1"), group=1, size=1.25) +
geom_point(aes(y=Text.features)) +
# geom_line(aes(y=All.features.minus.header.text, colour="var2"), group=1, size=1.25) +
geom_line(aes(y=All.features, colour="var3"), group=1, size=1.25) +
geom_point(aes(y=All.features)) +
labs(x="Name", y="Accuracy") +
theme.eager_chart_SCATTER
g10
library(dplyr)
library(extrafont)
# font_import()
loadfonts(device = "pdf")
library (ggplot2)
library(scales)
library(reshape2)
setwd("/Users/Sanjay/dev/EAGER/data/orgs/about/")
# load data
in.res <- read.csv("about_model_training_results_toR.csv", header = TRUE, stringsAsFactors = FALSE)
in.res
# BASIC THEME
theme.eager_chart <-
theme(legend.position = "right") +
theme(plot.title = element_text(size=26, family="Trebuchet MS", face="bold", hjust=0, color="#666666")) +
theme(axis.title = element_text(size=18, family="Trebuchet MS", face="bold", color="#666666")) +
theme(legend.title= element_text(size=14, family="Trebuchet MS", color="black")) +
theme(legend.text = element_text(size=12, family="Trebuchet MS", color="black")) +
theme(axis.text.x = element_text(size=12, family="Trebuchet MS", color="black")) +
theme(axis.text.y = element_text(size=12, family="Trebuchet MS", color="black")) +
theme(axis.title.y = element_text(angle=0))
# SCATTERPLOT THEME
theme.eager_chart_SCATTER <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# LINE THEME
theme.eager_chart_LINE <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# HISTOGRAM THEME
theme.eager_chart_HIST <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# SMALL MULTIPLE THEME
theme.eager_chart_SMALLM <- theme.eager_chart +
theme(panel.grid.minor = element_blank()) +
theme(strip.text.x = element_text(size=16, family="Trebuchet MS", face="bold", color="#666666"))
g10.df <- in.res[c(1,3,4,6,7,9) , c(1,2,3,5)]
g10.df
colnames(g10.df)
g10.melt <- melt(g10.df, id.vars='Name')
newline.labels = c("AdaBoost", "Decision\nTree", "Nearest\nNeighbors", "Neural\nNet", "RBF\nSVM", "SVC")
g10.a <- ggplot(data=g10.melt, aes(x=Name, y=value)) +
geom_bar(aes(fill = variable), position = "dodge", stat="identity") +
labs(x="Classifier", y="Accuracy") +
scale_x_discrete(labels=newline.labels) +
scale_fill_manual(values=c("#999999", "#195377", "#56B4E9"),
name="Feature set",
labels=c("Count only", "Text only", "All features")) +
scale_y_continuous(limits=c(0,.9), breaks=seq(0,.9,by=.2)) +
theme.eager_chart_HIST
g10.a
g10.b <- ggplot(data=g10.melt, aes(x=Name, y=value, group=variable, colour=variable)) +
geom_line(size=1.25) +
geom_point(size=1.25) +
labs(x="Model", y="Accuracy") +
theme.eager_chart_LINE
g10.b
# BASIC THEME
theme.eager_chart <-
theme(legend.position = "none") +
theme(plot.title = element_text(size=26, family="Trebuchet MS", face="bold", hjust=0, color="#666666")) +
theme(axis.title = element_text(size=18, family="Trebuchet MS", face="bold", color="#666666")) +
theme(axis.title.y = element_text(angle=0)) +
theme(axis.text=element_text(size=10, family="Trebuchet MS", color="#666666"))
# SCATTERPLOT THEME
theme.eager_chart_SCATTER <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# HISTOGRAM THEME
theme.eager_chart_HIST <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# SMALL MULTIPLE THEME
theme.eager_chart_SMALLM <- theme.eager_chart +
theme(panel.grid.minor = element_blank()) +
theme(strip.text.x = element_text(size=16, family="Trebuchet MS", face="bold", color="#666666"))
# load data
in.ass_all <- read.csv("assignees_overall.csv", header = TRUE, stringsAsFactors = FALSE)
in.ass_3 <- read.csv("assignees_3industries.csv", header = TRUE, stringsAsFactors = FALSE)
setwd("/Users/Sanjay/dev/EAGER/data/patents/measures/")
# BASIC THEME
theme.eager_chart <-
theme(legend.position = "none") +
theme(plot.title = element_text(size=26, family="Trebuchet MS", face="bold", hjust=0, color="#666666")) +
theme(axis.title = element_text(size=18, family="Trebuchet MS", face="bold", color="#666666")) +
theme(axis.title.y = element_text(angle=0)) +
theme(axis.text=element_text(size=10, family="Trebuchet MS", color="#666666"))
# SCATTERPLOT THEME
theme.eager_chart_SCATTER <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# HISTOGRAM THEME
theme.eager_chart_HIST <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# SMALL MULTIPLE THEME
theme.eager_chart_SMALLM <- theme.eager_chart +
theme(panel.grid.minor = element_blank()) +
theme(strip.text.x = element_text(size=16, family="Trebuchet MS", face="bold", color="#666666"))
# load data
in.ass_all <- read.csv("assignees_overall.csv", header = TRUE, stringsAsFactors = FALSE)
in.ass_3 <- read.csv("assignees_3industries.csv", header = TRUE, stringsAsFactors = FALSE)
in.ass_3$patent_id <- as.character(in.ass_3$patent_id)
in.inv_all <- read.csv("inventors_overall.csv", header = TRUE, stringsAsFactors = FALSE)
in.inv_3 <- read.csv("inventors_3industries.csv", header = TRUE)
in.inv_3$patent_id <- as.character(in.inv_3$patent_id)
in.pat_3 <- read.csv("patents_3industries.csv", header = TRUE, stringsAsFactors = FALSE)
in.pat_all <- read.csv("patents_overall.csv", header = TRUE, stringsAsFactors = FALSE)
in.ass_first_year <- read.csv("assignees_first-year.csv", header = TRUE, stringsAsFactors = FALSE)
in.lookup <- read.csv("assignee-2-patent-lookup.csv", header = TRUE, stringsAsFactors = FALSE)
in.eager_assignee <- read.csv("..//eager_assignee.csv", header = TRUE, stringsAsFactors = FALSE)
in.eager_assignee$max_emps <- as.numeric(gsub(",", "", in.eager_assignee$max_emps))
in.eager_assignee$sme <- 1
colnames (in.eager_assignee)
nrow(in.eager_assignee)
nrow(in.eager_assignee[in.eager_assignee$size_state == 'FirmSize.UNDEFINED',]) # == 97
# nrow(in.eager_assignee[in.eager_assignee$hit_url == '',]) # == 199
in.eager_assignee <- in.eager_assignee[in.eager_assignee$size_state != 'FirmSize.UNDEFINED' ,]
nrow(in.eager_assignee)
nrow(in.eager_assignee) - nrow (in.eager_assignee[in.eager_assignee$hit_url == '', ]) # firms with urls
in.eager_assignee[which(in.eager_assignee$size_state == 'FirmSize.LARGE_FIRM'), 22] <- 0
nrow(in.eager_assignee[in.eager_assignee$sme == 1, ])
nrow(in.eager_assignee[in.eager_assignee$sme == 0, ])
in.eager_assignee <- in.eager_assignee[,c(1,2,3,8,16:22)]
View(in.eager_assignee)
in.web_pages <- read.csv("..//..//orgs//about//about_predicted_and_labels.csv", header = TRUE, stringsAsFactors = FALSE) # just about page measures
in.web_pages_all <- read.csv("..//..//analysis//measures//simple_web_measures_v2.csv", header = TRUE, stringsAsFactors = FALSE)
in.web_pages_all$avg_words_per_page = in.web_pages_all$num_words / in.web_pages_all$pages
nrow (in.web_pages)
nrow(in.web_pages_all)
# number of small vs large firms
head(in.pat_all)
nrow(in.pat_all)
head (in.eager_assignee)
count_assignees_by_size <- in.pat_all %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% count(sme)
count_assignees_by_size
anti_join(in.pat_all, in.eager_assignee, by = c("organization_clnd" = "lookup_firm"))
nrow(anti_join(in.eager_assignee, in.pat_all, by = c("lookup_firm" = "organization_clnd")))
count_assignees_by_size
# number of small vs large firms
head(in.pat_all)
nrow(in.pat_all)
head (in.eager_assignee)
count_assignees_by_size <- in.pat_all %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% count(sme)
count_assignees_by_size
anti_join(in.pat_all, in.eager_assignee, by = c("organization_clnd" = "lookup_firm"))
# number of small vs large firms
head(in.pat_all)
nrow(in.pat_all)
head (in.eager_assignee)
anti_join(in.pat_all, in.eager_assignee, by = c("lookup_firm"))
nrow(anti_join(in.eager_assignee, in.pat_all, by = c("lookup_firm")))
count_assignees_by_size
# average number of employees
mean_emps_by_size <- in.eager_assignee  %>% group_by(sme) %>% summarize(mean = mean(max_emps, na.rm=TRUE))
mean_emps_by_size
# avg first year
head (in.ass_first_year)
nrow (in.ass_first_year %>% inner_join(in.eager_assignee, by = "lookup_firm"))
mean_first_year_by_size <- in.ass_first_year %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(year.min.p..date..., na.rm=TRUE))
mean_first_year_by_size
# mean number of patents all
mean_patents_all_by_size <- in.pat_all %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(count.p.id., na.rm=TRUE))
mean_patents_all_by_size
# mean number of patents 3 industries
mean_patents_3_by_size <- in.pat_3 %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(count.epa.id., na.rm=TRUE))
mean_patents_3_by_size
# average number of assignees all
head (in.ass_all)
mean_assignees_all_by_size <- in.ass_all %>% inner_join(in.lookup, by = "patent_id") %>% group_by(lookup_firm)  %>%
summarize(mean = mean( count.pa.assignee_id., na.rm=TRUE)) %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(mean, na.rm=TRUE))
mean_assignees_all_by_size
# average number of assignees 3 industries
head (in.ass_3)
mean_assignees_3_by_size <- in.ass_3 %>% inner_join(in.lookup, by = "patent_id") %>% group_by(lookup_firm)  %>%
summarize(mean = mean( count.pa.assignee_id., na.rm=TRUE)) %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(mean, na.rm=TRUE))
mean_assignees_3_by_size
# average number of inventors all
head (in.inv_all)
mean_inventors_all_by_size <- in.inv_all %>% inner_join(in.lookup, by = "patent_id") %>% group_by(lookup_firm)  %>%
summarize(mean = mean( count.pi.inventor_id., na.rm=TRUE)) %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(mean, na.rm=TRUE))
mean_inventors_all_by_size
# average number of inventors 3 industries
head (in.inv_3)
mean_inventors_3_by_size <- in.inv_3 %>% inner_join(in.lookup, by = "patent_id") %>% group_by(lookup_firm)  %>%
summarize(mean = mean( count.pi.inventor_id., na.rm=TRUE)) %>% inner_join(in.eager_assignee, by = "lookup_firm") %>% group_by(sme) %>%
summarize(mean = mean(mean, na.rm=TRUE))
mean_inventors_3_by_size
# prep website data by aggregating on firm
head (in.web_pages)
firm_about_page_measures = in.web_pages %>% group_by(firm_name)  %>%
summarize (about_gen.count = n(), about_exact.count = sum(is_about), default_to_home = sum(default_to_home))
head (firm_about_page_measures)
patents_web_emps_about <- in.pat_all %>% inner_join(in.eager_assignee, by = "lookup_firm") %>%
inner_join(firm_about_page_measures, by = c("lookup_firm_web" = "firm_name"))
nrow (patents_web_emps_about)
g1.df <- patents_web_emps_about %>% arrange(max_emps) %>% as.data.frame()
nrow (g1.df)
g1.a <- ggplot(data=g1.df[g1.df$sme == 1,], aes(x=max_emps, y=about_gen.count)) +
geom_point(alpha=.4, color="#00a5ff") +
labs(x="Employees", y="Number of\nabout pages,\ngeneral") +
scale_x_continuous(labels=comma, limits=c(0,500)) +
scale_y_continuous(limits=c(0,90), breaks=seq(0,90,by=10)) +
geom_smooth(method = "loess") +
theme.eager_chart_SCATTER
g1.a
g1.b <- ggplot(data=g1.df[g1.df$sme == 1,], aes(x=max_emps, y=about_exact.count)) +
geom_point(aes(color=factor(default_to_home), alpha=factor(default_to_home))) + #color="#00a5ff"
labs(x="Employees", y="Number of\nabout pages,\nmodeled") +
scale_x_continuous(labels=comma, limits=c(0,500)) +
scale_y_continuous(limits=c(0,20), breaks=seq(0,20,by=5)) +
geom_smooth(method = "loess") +
scale_colour_manual(values = c("blue", "red")) +
scale_alpha_discrete(range=c(0.2, 1)) +
theme.eager_chart_SCATTER
g1.b
nrow(g1.df$sme == 1,)
nrow (g1.df[g1.df$sme == 1,])
g1.c <- ggplot(data=g1.df[g1.df$sme == 1,], aes(x=count.p.id., y=about_gen.count)) +
geom_point(alpha=.4, size=4, color="#7b00ff") +
labs(x="Patents", y="Number of\nabout pages,\ngeneral") +
scale_x_continuous(labels=comma, limits=c(0,4500)) +
scale_y_continuous(limits=c(0,100), breaks=seq(0,100,by=10)) +
geom_smooth(method = "lm") +
theme.eager_chart_SCATTER
g1.c
g1.d <- ggplot(data=g1.df[g1.df$sme == 1,], aes(x=count.p.id., y=about_exact.count)) +
geom_point(alpha=.4, size=4, color="#7b00ff") +
labs(x="Patents", y="Number of\nabout pages,\nexact") +
scale_x_continuous(labels=comma, limits=c(0,4500)) +
scale_y_continuous(limits=c(0,12), breaks=seq(0,12,by=2)) +
geom_smooth(method = "lm") +
theme.eager_chart_SCATTER
g1.d
g2.df <- patents_web_emps_all %>% arrange(max_emps) %>% as.data.frame()
nrow (g2.df)
g2.df <- patents_web_emps_all %>% arrange(max_emps) %>% as.data.frame()
# merge in website data (measures for all pages)
nrow(setdiff(in.eager_assignee$lookup_firm_web, in.web_pages_all$firm_name))
setdiff(in.web_pages_all$firm_name, in.eager_assignee$lookup_firm_web)
web_emps <- in.eager_assignee %>%  inner_join(in.web_pages_all, by = c("lookup_firm_web" = "firm_name"))
# merge in website data (measures for all pages)
nrow(setdiff(in.eager_assignee$lookup_firm_web, in.web_pages_all$firm_name))
setdiff(in.web_pages_all$firm_name, in.eager_assignee$lookup_firm_web)
web_emps <- in.eager_assignee %>%  inner_join(in.web_pages_all, by = c("lookup_firm_web" = "firm_name"))
nrow(web_emps)
head (in.web_pages_all)
patents_web_emps_all <- in.pat_all %>% inner_join(in.eager_assignee, by = "lookup_firm") %>%
inner_join(in.web_pages_all, by = c("lookup_firm_web" = "firm_name"))
nrow(patents_web_emps_all)
g2.df <- patents_web_emps_all %>% arrange(max_emps) %>% as.data.frame()
nrow (g2.df)
g2.a <- ggplot(data=g2.df[g2.df$sme ==1, ], aes(x=max_emps, y=pages)) +
geom_point(alpha=.4, color="#0037ff") +
labs(x="Employees", y="Number of\npages") +
scale_x_continuous(labels=comma, limits=c(0,500)) +
scale_y_continuous(limits=c(0,400), breaks=seq(0,400,by=100)) +
geom_smooth(method = "loess") +
theme.eager_chart_SCATTER
g2.a
nrow (g2.df[g2.df$sme ==1, ])
nrow(web_emps)
nrow (g2.df[g2.df$sme ==1, ])
607/770
setwd("/Users/Sanjay/dev/EAGER/data/orgs/about/")
# load data
in.res <- read.csv("about_model_training_results_toR.csv", header = TRUE, stringsAsFactors = FALSE)
in.res
# BASIC THEME
theme.eager_chart <-
theme(legend.position = "right") +
theme(plot.title = element_text(size=26, family="Trebuchet MS", face="bold", hjust=0, color="#666666")) +
theme(axis.title = element_text(size=18, family="Trebuchet MS", face="bold", color="#666666")) +
theme(legend.title= element_text(size=14, family="Trebuchet MS", color="black")) +
theme(legend.text = element_text(size=12, family="Trebuchet MS", color="black")) +
theme(axis.text.x = element_text(size=12, family="Trebuchet MS", color="black")) +
theme(axis.text.y = element_text(size=12, family="Trebuchet MS", color="black")) +
theme(axis.title.y = element_text(angle=0))
# SCATTERPLOT THEME
theme.eager_chart_SCATTER <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# LINE THEME
theme.eager_chart_LINE <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
# HISTOGRAM THEME
theme.eager_chart_HIST <- theme.eager_chart +
theme(axis.title.x = element_text(hjust=0, vjust=-.5))
g10.df <- in.res[c(2,3,4,7,6) , c(1,2,3,5)]
g10.df
colnames(g10.df)
g10.melt <- melt(g10.df, id.vars='Name')
newline.labels = c("Linear\nSVM", "RBF\nSVM", "Decision\nTree", "AdaBoost", "Neural\nNet")
g10.a <- ggplot(data=g10.melt, aes(x=Name, y=value)) +
geom_bar(aes(fill = variable), position = "dodge", stat="identity") +
labs(x="Classifier", y="Accuracy") +
scale_x_discrete(labels=newline.labels) +
scale_fill_manual(values=c("#999999", "#195377", "#56B4E9"),
name="Feature set",
labels=c("Count only", "Text only", "All features")) +
scale_y_continuous(limits=c(0,.9), breaks=seq(0,.9,by=.2)) +
theme.eager_chart_HIST
g10.a
g10.a
g10.melt
g10.a <- ggplot(data=g10.melt, aes(x=Name, y=value)) +
geom_bar(aes(fill = variable), position = "dodge", stat="identity") +
labs(x="Classifier", y="Accuracy") +
scale_x_discrete(labels=newline.labels) +
scale_fill_manual(values=c("#999999", "#195377", "#56B4E9"),
name="Feature set",
labels=c("Count only", "Text only", "All features")) +
scale_y_continuous(limits=c(0,.9), breaks=seq(0,.9,by=.1)) +
theme.eager_chart_HIST
g10.a
g10.df
g10.df <- in.res[c(2,3,4,7,6) , c(1,2,3,5)]
g10.df
# load data
in.res <- read.csv("about_model_training_results_toR.csv", header = TRUE, stringsAsFactors = FALSE)
in.res
