n
library(trend)
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages("trend")
install.packages("ggplot2")
install.packages("plyr")
install.packages("scales")
install.packages("MASS")
install.packages("reshape")
install.packages("tools")
install.packages("plotly")
install.packages("rjson")
library(trend)
library (ggplot2)
library(plyr)
library(scales)
library(MASS)
library(reshape)
library(tools)
library(plotly)
library(rjson)
load("~/Documents/patentsview/research/issue brief/r/govIntBrief_v0.6.1-ska.R")
install.packages(c("dplyr", "mstate", "msm"))
install.packages("ggplot2")
install.packages(c("data.table", "reshape"))
# windows
# setwd("C:\\Users\\sarora\\Documents\\GitHub\\EAGER\\data")
dataset <- "green_train_test"
# load data and clean
# topics.file <- "orgs\\boilerpipe\\out_topics.csv"
topics.file <- "orgs/parsed_page_output/" + dataset + "out_topics.csv"
# load data and clean
# topics.file <- "orgs\\boilerpipe\\out_topics.csv"
topics.file <- "orgs/parsed_page_output/" + dataset + "_out_topics.csv"
# load data and clean
# topics.file <- "orgs\\boilerpipe\\out_topics.csv"
topics.file <- paste0("orgs/parsed_page_output/", dataset, "_out_topics.csv")
in.topics <- read.csv(topics.file, header = TRUE, stringsAsFactors = FALSE)
# windows
# setwd("C:\\Users\\sarora\\Documents\\GitHub\\EAGER\\data")
dataset <- "green_train_test"
# copy the label vector from jupyter notebook
labels <-
c("univers|manag|engin|director|develop", "film|establish|manufactur|base|adhes", "heater|heat|thermostat|control|design", "develop|power|energi|provid|market", "back|sharehold|energi|media|safeti", "water|facil|fuel|past|biomass", "motor|control|electron|suppli|wire", "materi|laboratori|establish|organ|contact")
library("msm")
library("dplyr")
library("igraph")
library("diffusr")
# mac os or linux
setwd("/Users/sarora/dev/EAGER/data/")
# windows
# setwd("C:\\Users\\sarora\\Documents\\GitHub\\EAGER\\data")
dataset <- "green_train_test"
# copy the label vector from jupyter notebook
labels <-
c("univers|manag|engin|director|develop", "film|establish|manufactur|base|adhes", "heater|heat|thermostat|control|design", "develop|power|energi|provid|market", "back|sharehold|energi|media|safeti", "water|facil|fuel|past|biomass", "motor|control|electron|suppli|wire", "materi|laboratori|establish|organ|contact")
# copy the label vector from jupyter notebook
labels <-
c("back|sharehold|energi|media|public", "establish|manufactur|film|develop|base", "power|develop|energi|provid|servic", "manag|engin|univers|director|energi", "motor|control|suppli|wire|electron", "materi|past|award|world|batteri", "heater|control|heat|thermostat|burn", "water|work|home|communiti|india")
# load firm patent data
# patent_data.file = "patents\\measures\\firm_level_patent_measures.csv"
patent_data.file = "patents/measures/firm_level_patent_measures.csv"
in.patent_data <- read.csv(patent_data.file, header = TRUE, stringsAsFactors = FALSE)
head(in.patent_data)
nrow (in.patent_data)
in.patent_data[grep("\\/", in.patent_data$organization_clnd, perl=TRUE),]
# load data and clean
# topics.file <- "orgs\\boilerpipe\\out_topics.csv"
topics.file <- paste0("orgs/parsed_page_output/", dataset, "_out_topics.csv")
in.topics <- read.csv(topics.file, header = TRUE, stringsAsFactors = FALSE)
head(in.topics)
# windows
# setwd("C:\\Users\\sarora\\Documents\\GitHub\\EAGER\\data")
dset_name <- "green_train_test"
# mac os or linux
setwd("/Users/sarora/dev/EAGER/data/")
# mac os or linux
setwd("/Users/sarora/dev/EAGER/data/")
# windows
# setwd("C:\\Users\\sarora\\Documents\\GitHub\\EAGER\\data")
dset_name <- "green_train_test"
# copy the label vector from jupyter notebook
labels <-
c("univers|engin|manag|develop|group", "servic|innov|develop|solut|custom", "power|system|solar|develop|energi", "report|icon|annual|sustain|inform")
# load firm patent data
# patent_data.file = "patents\\measures\\firm_level_patent_measures.csv"
patent_data.file = "patents/measures/firm_level_patent_measures.csv"
in.patent_data <- read.csv(patent_data.file, header = TRUE, stringsAsFactors = FALSE)
head(in.patent_data)
nrow (in.patent_data)
in.patent_data[grep("\\/", in.patent_data$organization_clnd, perl=TRUE),]
# load data and clean
# topics.file <- "orgs\\boilerpipe\\out_topics.csv"
topics.file <- paste0("orgs/parsed_page_output/", dset_name, "_out_topics.csv")
in.topics <- read.csv(topics.file, header = TRUE, stringsAsFactors = FALSE)
head(in.topics)
nrow(in.topics)
in.topics$main_topic <- in.topics$main_topic + 1
unique(in.topics$main_topic)
num_topics <- length(unique(in.topics$main_topic))
num_topics
cnt_by_topic <- in.topics %>% count(main_topic)
cnt_by_topic
# percentage of topics overall all paragraphs in dataset
p0 <- cnt_by_topic$n / sum(cnt_by_topic$n)
p0
# assign groups and view
groups <- in.topics %>% group_indices(firm)
in.topics$gid <- groups
View(in.topics)
# state table (msm)
head(in.topics)
st <- statetable.msm(main_topic, gid, data = in.topics)
rownames(st) <- colnames(st) <- labels
st
labels
prop.table(st, 1) # state changes by row percentages
# visualization the state matrix in igraph
net=graph.adjacency(st,mode="directed",weighted=TRUE,diag=FALSE)
# compute node degrees (#links) and use that to set node size:
deg <- degree(net, mode="all")
V(net)$size <- deg*3
E(net)$width <- log(E(net)$weight)
E(net)$arrow.size <- 1
graph_attr(net, "layout") <- layout_with_lgl
plot.igraph(net,vertex.label=V(net)$name,layout=layout_with_lgl, edge.curved=.4, vertex.label.color="black", edge.color="gray80",
vertex.color="light blue", vertex.frame.color="light blue", rescale=TRUE)
labels
# stationary distribution of a Markov chain (igraph)
w <- random_walk(net, start = 1, steps = 1000, mode = "out")
ec <- eigen_centrality(net, directed = TRUE)$vector
pg <- page_rank(net, damping = 0.999)$vector
# correlations
cor(table(w), ec)
cor(table(w), pg)
table(w)
ec
# msm
qm <- matrix(rep (1, num_topics^2), nrow=num_topics, ncol=num_topics)
diag(qm) <- 0
rownames(qm) <- colnames(qm) <- labels
qm
# join firm-level patent variables with topic panel variables
joined.patents_topics <- in.topics %>% inner_join (in.patent_data, by=c("firm" = "organization_clnd"))
nrow(joined.patents_topics)
head(joined.patents_topics)
View(joined.patents_topics )
# base model
eager.msm1 <- msm(main_topic ~ para_order, subject = gid, data = in.topics, exacttimes = TRUE, qmatrix = qm, gen.inits=TRUE)
eager.msm1
# introduce covariates
eager.msm2 <- msm(main_topic ~ para_order, covariates = ~ mean_citations_3,subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
eager.msm2
eager.msm2
hazard.msm(eager.msm2)
# more covariates
eager.msm3 <- msm(main_topic ~ para_order, covariates = ~ mean_citations_3 + first_year + num_patents_all + mean_assignees_all + mean_inventors_3, subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
# more covariates
eager.msm3 <- msm(main_topic ~ para_order, covariates = ~ mean_citations_3 + mean_inventors_3, subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
eager.msm3
hazard.msm(eager.msm3)
?hazard.msm
hazard.msm(eager.msm3, cl=.99)
