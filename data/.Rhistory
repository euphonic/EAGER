n
library(trend)
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages(c("trend", "ggplot2", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson"))
install.packages("trend")
install.packages("ggplot2")
install.packages("plyr")
install.packages("scales")
install.packages("MASS")
install.packages("reshape")
install.packages("tools")
install.packages("plotly")
install.packages("rjson")
library(trend)
library (ggplot2)
library(plyr)
library(scales)
library(MASS)
library(reshape)
library(tools)
library(plotly)
library(rjson)
load("~/Documents/patentsview/research/issue brief/r/govIntBrief_v0.6.1-ska.R")
install.packages(c("dplyr", "mstate", "msm"))
install.packages("ggplot2")
install.packages(c("data.table", "reshape"))
# mac os or linux
setwd("/Users/sarora/dev/EAGER/data/")
# copy the label vector from jupyter notebook
labels <- c("product|develop|corpor", "product|servic|technolog", "system|2018|technolog", "technolog|2018|solut")
# load firm patent data
# patent_data.file = "patents\\measures\\firm_level_patent_measures.csv"
patent_data.file = "patents/measures/firm_level_patent_measures.csv"
in.patent_data <- read.csv(patent_data.file, header = TRUE, stringsAsFactors = FALSE)
head(in.patent_data)
nrow (in.patent_data)
in.patent_data[grep("\\/", in.patent_data$organization_clnd, perl=TRUE),]
in.patent_data[grep("\\.", in.patent_data$organization_clnd, perl=TRUE),]
# load data and clean
in.depth0_topics <- read.csv("orgs\\depth0_boilerpipe\\out_topics.csv", header = TRUE, stringsAsFactors = FALSE)
# load data and clean
# depth0_topics.file <- "orgs\\depth0_boilerpipe\\out_topics.csv"
depth0_topics.file <- "orgs/depth0_boilerpipe/out_topics.csv"
in.depth0_topics <- read.csv(depth0_topics.file, header = TRUE, stringsAsFactors = FALSE)
# mac os or linux
setwd("/Users/sarora/dev/EAGER/data/")
# copy the label vector from jupyter notebook
labels <-
c("servic|corpor|2018", "solut|servic|new", "product|servic|support", "use|technolog|system", "product|make|technolog", "inform|data|product", "technolog|energi|develop", "technolog|system|product")
# load firm patent data
# patent_data.file = "patents\\measures\\firm_level_patent_measures.csv"
patent_data.file = "patents/measures/firm_level_patent_measures.csv"
in.patent_data <- read.csv(patent_data.file, header = TRUE, stringsAsFactors = FALSE)
head(in.patent_data)
nrow (in.patent_data)
in.patent_data[grep("\\/", in.patent_data$organization_clnd, perl=TRUE),]
# load data and clean
# depth0_topics.file <- "orgs\\depth0_boilerpipe\\out_topics.csv"
depth0_topics.file <- "orgs/depth0_boilerpipe/out_topics.csv"
in.depth0_topics <- read.csv(depth0_topics.file, header = TRUE, stringsAsFactors = FALSE)
head(in.depth0_topics)
nrow(in.depth0_topics)
in.depth0_topics$main_topic <- in.depth0_topics$main_topic + 1
unique(in.depth0_topics$main_topic)
num_topics <- length(unique(in.depth0_topics$main_topic))
num_topics
cnt_by_topic <- in.depth0_topics %>% count(main_topic)
library("msm")
library("dplyr")
library("igraph")
library("diffusr")
install.packages("igraph")
install.packages("diffusr")
cnt_by_topic <- in.depth0_topics %>% count(main_topic)
cnt_by_topic
# percentage of topics overall all paragraphs in dataset
p0 <- cnt_by_topic$n / sum(cnt_by_topic$n)
p0
# assign groups and view
groups <- in.depth0_topics %>% group_indices(firm_key)
in.depth0_topics$gid <- groups
# assign groups and view
groups <- in.depth0_topics %>% group_indices(firm)
in.depth0_topics$gid <- groups
View(in.depth0_topics)
# state table (msm)
head(in.depth0_topics)
st <- statetable.msm(main_topic, gid, data = in.depth0_topics)
rownames(st) <- colnames(st) <- labels
st
prop.table(st, 1) # state changes by row percentages
prop.table(st, 1) # state changes by row percentages
prop.table(st, 1) # state changes by row percentages
# visualization the state matrix in igraph
net=graph.adjacency(st,mode="directed",weighted=TRUE,diag=FALSE)
library("igraph")
library("diffusr")
# visualization the state matrix in igraph
net=graph.adjacency(st,mode="directed",weighted=TRUE,diag=FALSE)
# compute node degrees (#links) and use that to set node size:
deg <- degree(net, mode="all")
V(net)$size <- deg*3
E(net)$width <- log(E(net)$weight)
E(net)$arrow.size <- 1
graph_attr(net, "layout") <- layout_with_lgl
plot.igraph(net,vertex.label=V(net)$name,layout=layout_with_lgl, edge.curved=.4, vertex.label.color="black", edge.color="gray80",
vertex.color="light blue", vertex.frame.color="light blue", rescale=TRUE)
E(net)$arrow.size <- .1
graph_attr(net, "layout") <- layout_with_lgl
plot.igraph(net,vertex.label=V(net)$name,layout=layout_with_lgl, edge.curved=.4, vertex.label.color="black", edge.color="gray80",
vertex.color="light blue", vertex.frame.color="light blue", rescale=TRUE)
E(net)$arrow.size <- 1
graph_attr(net, "layout") <- layout_with_lgl
plot.igraph(net,vertex.label=V(net)$name,layout=layout_with_lgl, edge.curved=.4, vertex.label.color="black", edge.color="gray80",
vertex.color="light blue", vertex.frame.color="light blue", rescale=TRUE)
# stationary distribution of a Markov chain (igraph)
w <- random_walk(net, start = 1, steps = 1000, mode = "out")
ec <- eigen_centrality(net, directed = TRUE)$vector
pg <- page_rank(net, damping = 0.999)$vector
# correlations
cor(table(w), ec)
cor(table(w), pg)
# stationary distribution of a Markov chain (igraph)
w <- random_walk(net, start = 1, steps = 1000, mode = "out")
ec <- eigen_centrality(net, directed = TRUE)$vector
pg <- page_rank(net, damping = 0.999)$vector
# correlations
cor(table(w), ec)
cor(table(w), pg)
w
table(w)
# msm
qm <- matrix(rep (1, num_topics^2), nrow=num_topics, ncol=num_topics)
diag(qm) <- 0
rownames(qm) <- colnames(qm) <- labels
qm
# join firm-level patent variables with topic panel variables
joined.patents_topics <- in.depth0_topics %>% inner_join (in.patent_data, by=c("firm" = "organization_clnd"))
nrow(joined.patents_topics)
nrow(in.depth0_topics)
# join firm-level patent variables with topic panel variables
joined.patents_topics <- in.depth0_topics %>% left_join (in.patent_data, by=c("firm" = "organization_clnd"))
nrow(joined.patents_topics)
View(joined.patents_topics )
library("msm")
# mac os or linux
setwd("/Users/sarora/dev/EAGER/data/")
# copy the label vector from jupyter notebook
labels <-
c("product|2018|materi", "system|servic|technolog", "servic|technolog|solut", "inform|product|polici", "solut|technolog|use", "product|2018|busi")
# load firm patent data
# patent_data.file = "patents\\measures\\firm_level_patent_measures.csv"
patent_data.file = "patents/measures/firm_level_patent_measures.csv"
in.patent_data <- read.csv(patent_data.file, header = TRUE, stringsAsFactors = FALSE)
head(in.patent_data)
nrow (in.patent_data)
in.patent_data[grep("\\/", in.patent_data$organization_clnd, perl=TRUE),]
# load firm patent data
# patent_data.file = "patents\\measures\\firm_level_patent_measures.csv"
patent_data.file = "patents/measures/firm_level_patent_measures.csv"
in.patent_data <- read.csv(patent_data.file, header = TRUE, stringsAsFactors = FALSE)
head(in.patent_data)
# MacOS
setwd("/Users/sarora/dev/EAGER/data/patents/measures")
# load data
in.eager_patents <- read.csv("../eager_patent_all.csv", header = TRUE, stringsAsFactors = FALSE)
in.eager_citations <- read.csv("citations_3industries.csv", header = TRUE, stringsAsFactors = FALSE)
in.eager_citations$patent_id <- as.character(in.eager_citations$patent_id)
in.ass_all <- read.csv("assignees_overall.csv", header = TRUE, stringsAsFactors = FALSE)
in.ass_3 <- read.csv("assignees_3industries.csv", header = TRUE, stringsAsFactors = FALSE)
in.ass_3$patent_id <- as.character(in.ass_3$patent_id)
in.inv_all <- read.csv("inventors_overall.csv", header = TRUE, stringsAsFactors = FALSE)
in.inv_3 <- read.csv("inventors_3industries.csv", header = TRUE)
in.inv_3$id <- as.character(in.inv_3$id)
in.pat_3 <- read.csv("patents_3industries.csv", header = TRUE, stringsAsFactors = FALSE)
in.pat_all <- read.csv("patents_overall.csv", header = TRUE, stringsAsFactors = FALSE)
in.ass_first_year <- read.csv("assignees_first-year.csv", header = TRUE, stringsAsFactors = FALSE)
in.lookup <- read.csv("assignee-2-patent-lookup.csv", header = TRUE, stringsAsFactors = FALSE)
in.eager_assignee <- read.csv("../eager_assignee.csv", header = TRUE, stringsAsFactors = FALSE)
in.eager_assignee$employees <- as.numeric(gsub(",", "", in.eager_assignee$employees))
in.eager_assignee$sme <- in.eager_assignee$employees
in.eager_assignee[which(in.eager_assignee$employees > 500 & in.eager_assignee$thes_types=="Corporate"), 5] <- 0
in.eager_assignee[which(in.eager_assignee$employees < 500 & !is.na(in.eager_assignee$employees) & in.eager_assignee$thes_types=="Corporate"), 5] <- 1
in.web_pages <- read.csv("../../analysis/measures/simple_web_measures_v1.csv", header = TRUE, stringsAsFactors = FALSE)
head (in.ass_first_year)
# number of patents all
head(in.pat_all)
num_patents_all_by_firm <- in.pat_all %>% inner_join(in.eager_assignee, by = c("organization_clnd")) %>% group_by(organization_clnd) %>%
summarize(num_patents_all = sum(count.p.id.))
head(num_patents_all_by_firm)
# number of patents 3 industries
num_patents_3_by_firm <- in.pat_3 %>% inner_join(in.eager_assignee, by = c("organization_clnd")) %>% group_by(organization_clnd) %>%
summarize(num_patents_3 = sum(count.epa.id.))
num_patents_3_by_firm
# number of assignees all
head (in.ass_all)
mean_assignees_all_by_firm <- in.ass_all %>% inner_join(in.lookup, by = c("patent_id" = "id")) %>% group_by(organization_clnd)  %>%
summarize(mean_assignees_all = mean( count.pa.assignee_id., na.rm=TRUE))
head(mean_assignees_all_by_firm)
# number of assignees 3 industries
head (in.ass_3)
mean_assignees_3_by_firm <- in.ass_3 %>% inner_join(in.lookup, by = c("patent_id" = "id")) %>% group_by(organization_clnd)  %>%
summarize(mean_assignees_3 = mean(count.pa.assignee_id., na.rm=TRUE))
mean_assignees_3_by_firm
# average number of inventors all
head (in.inv_all)
mean_inventors_all_by_size <- in.inv_all %>% inner_join(in.lookup, by = c("id")) %>% group_by(organization_clnd)  %>%
summarize(mean_inventors_all = mean( count.pi.inventor_id., na.rm=TRUE))
mean_inventors_all_by_size
# average number of inventors 3 industries
head (in.inv_3)
mean_inventors_3_by_size <- in.inv_3 %>% inner_join(in.lookup, by = c("id")) %>% group_by(organization_clnd)  %>%
summarize(mean_inventors_3 = mean( count.pi.inventor_id., na.rm=TRUE))
mean_inventors_3_by_size
# straight citation counts < 5 years
mean_citations_3_by_firm <- in.eager_citations %>% right_join(in.lookup, by = c("patent_id" = "id"))  %>% group_by(organization_clnd)  %>%
summarize(mean_citations_3 = mean( num_citations, na.rm=TRUE))
mean_citations_3_by_firm[is.na(mean_citations_3_by_firm$mean_citations_3), 2] <- 0 # change na's to 0's
# final out
firm_level_patent_measures <- mean_citations_3_by_firm %>%
right_join(in.ass_first_year, by = c("organization_clnd")) %>%
left_join(num_patents_all_by_firm, by = c("organization_clnd")) %>% left_join(num_patents_3_by_firm, by = c("organization_clnd")) %>%
left_join(mean_assignees_all_by_firm, by = c("organization_clnd")) %>% left_join(mean_assignees_3_by_firm, by = c("organization_clnd")) %>%
left_join(mean_inventors_all_by_size, by = c("organization_clnd")) %>% left_join(mean_inventors_3_by_size, by = c("organization_clnd"))
nrow(firm_level_patent_measures)
firm_level_patent_measures[is.na(firm_level_patent_measures)] <- 0
firm_level_patent_measures[firm_level_patent_measures == ""] <- 0
write.csv(firm_level_patent_measures, "firm_level_patent_measures.csv", row.names = FALSE)
# load firm patent data
# patent_data.file = "patents\\measures\\firm_level_patent_measures.csv"
patent_data.file = "patents/measures/firm_level_patent_measures.csv"
in.patent_data <- read.csv(patent_data.file, header = TRUE, stringsAsFactors = FALSE)
# mac os or linux
setwd("/Users/sarora/dev/EAGER/data/")
# copy the label vector from jupyter notebook
labels <-
c("product|2018|materi", "system|servic|technolog", "servic|technolog|solut", "inform|product|polici", "solut|technolog|use", "product|2018|busi")
# load firm patent data
# patent_data.file = "patents\\measures\\firm_level_patent_measures.csv"
patent_data.file = "patents/measures/firm_level_patent_measures.csv"
in.patent_data <- read.csv(patent_data.file, header = TRUE, stringsAsFactors = FALSE)
head(in.patent_data)
nrow (in.patent_data)
in.patent_data[grep("\\/", in.patent_data$organization_clnd, perl=TRUE),]
# load data and clean
# depth0_topics.file <- "orgs\\depth0_boilerpipe\\out_topics.csv"
depth0_topics.file <- "orgs/depth0_boilerpipe/out_topics.csv"
in.depth0_topics <- read.csv(depth0_topics.file, header = TRUE, stringsAsFactors = FALSE)
head(in.depth0_topics)
nrow(in.depth0_topics)
in.depth0_topics$main_topic <- in.depth0_topics$main_topic + 1
unique(in.depth0_topics$main_topic)
num_topics <- length(unique(in.depth0_topics$main_topic))
num_topics
cnt_by_topic <- in.depth0_topics %>% count(main_topic)
cnt_by_topic
# percentage of topics overall all paragraphs in dataset
p0 <- cnt_by_topic$n / sum(cnt_by_topic$n)
p0
# assign groups and view
groups <- in.depth0_topics %>% group_indices(firm)
in.depth0_topics$gid <- groups
# state table (msm)
head(in.depth0_topics)
st <- statetable.msm(main_topic, gid, data = in.depth0_topics)
rownames(st) <- colnames(st) <- labels
st
prop.table(st, 1) # state changes by row percentages
# visualization the state matrix in igraph
net=graph.adjacency(st,mode="directed",weighted=TRUE,diag=FALSE)
# compute node degrees (#links) and use that to set node size:
deg <- degree(net, mode="all")
V(net)$size <- deg*3
E(net)$width <- log(E(net)$weight)
E(net)$arrow.size <- 1
graph_attr(net, "layout") <- layout_with_lgl
plot.igraph(net,vertex.label=V(net)$name,layout=layout_with_lgl, edge.curved=.4, vertex.label.color="black", edge.color="gray80",
vertex.color="light blue", vertex.frame.color="light blue", rescale=TRUE)
# stationary distribution of a Markov chain (igraph)
w <- random_walk(net, start = 1, steps = 1000, mode = "out")
ec <- eigen_centrality(net, directed = TRUE)$vector
pg <- page_rank(net, damping = 0.999)$vector
# correlations
cor(table(w), ec)
cor(table(w), pg)
# msm
qm <- matrix(rep (1, num_topics^2), nrow=num_topics, ncol=num_topics)
diag(qm) <- 0
rownames(qm) <- colnames(qm) <- labels
qm
# join firm-level patent variables with topic panel variables
joined.patents_topics <- in.depth0_topics %>% left_join (in.patent_data, by=c("firm" = "organization_clnd"))
nrow(joined.patents_topics)
# base model
eager.msm1 <- msm(main_topic ~ para_order, subject = gid, data = in.depth0_topics, exacttimes = TRUE, qmatrix = qm, gen.inits=TRUE)
eager.msm1
nrow(joined.patents_topics)
nrow(in.depth0_topics)
# join firm-level patent variables with topic panel variables
joined.patents_topics <- in.depth0_topics %>% inner_join (in.patent_data, by=c("firm" = "organization_clnd"))
nrow(joined.patents_topics)
View(joined.patents_topics )
# join firm-level patent variables with topic panel variables
joined.patents_topics <- in.depth0_topics %>% left_join (in.patent_data, by=c("firm" = "organization_clnd"))
nrow(joined.patents_topics)
View(joined.patents_topics )
# join firm-level patent variables with topic panel variables
joined.patents_topics <- in.depth0_topics %>% inner_join (in.patent_data, by=c("firm" = "organization_clnd"))
nrow(joined.patents_topics)
# base model
eager.msm1 <- msm(main_topic ~ para_order, subject = gid, data = in.depth0_topics, exacttimes = TRUE, qmatrix = qm, gen.inits=TRUE)
eager.msm1
hazard.msm(eager.msm2)
pmatrix.msm(eager.msm1, t = 2, ci = "normal")
head(joined.patents_topics)
# first year of patent for firm
colnames(in.ass_first_year)[1] <- 'first_year'
head (in.ass_first_year)
# final out
firm_level_patent_measures <- mean_citations_3_by_firm %>%
right_join(in.ass_first_year, by = c("organization_clnd")) %>%
left_join(num_patents_all_by_firm, by = c("organization_clnd")) %>% left_join(num_patents_3_by_firm, by = c("organization_clnd")) %>%
left_join(mean_assignees_all_by_firm, by = c("organization_clnd")) %>% left_join(mean_assignees_3_by_firm, by = c("organization_clnd")) %>%
left_join(mean_inventors_all_by_size, by = c("organization_clnd")) %>% left_join(mean_inventors_3_by_size, by = c("organization_clnd"))
nrow(firm_level_patent_measures)
firm_level_patent_measures[is.na(firm_level_patent_measures)] <- 0
firm_level_patent_measures[firm_level_patent_measures == ""] <- 0
View(firm_level_patent_measures)
write.csv(firm_level_patent_measures, "firm_level_patent_measures.csv", row.names = FALSE)
write.csv(firm_level_patent_measures, "firm_level_patent_measures.csv", row.names = FALSE)
# final out
firm_level_patent_measures <- mean_citations_3_by_firm %>%
right_join(in.ass_first_year, by = c("organization_clnd")) %>%
left_join(num_patents_all_by_firm, by = c("organization_clnd")) %>% left_join(num_patents_3_by_firm, by = c("organization_clnd")) %>%
left_join(mean_assignees_all_by_firm, by = c("organization_clnd")) %>% left_join(mean_assignees_3_by_firm, by = c("organization_clnd")) %>%
left_join(mean_inventors_all_by_size, by = c("organization_clnd")) %>% left_join(mean_inventors_3_by_size, by = c("organization_clnd"))
nrow(firm_level_patent_measures)
firm_level_patent_measures[is.na(firm_level_patent_measures)] <- 0
firm_level_patent_measures[firm_level_patent_measures == ""] <- 0
View(firm_level_patent_measures)
# MacOS
setwd("/Users/sarora/dev/EAGER/data/patents/measures")
write.csv(firm_level_patent_measures, "firm_level_patent_measures.csv", row.names = FALSE)
# load firm patent data
# patent_data.file = "patents\\measures\\firm_level_patent_measures.csv"
patent_data.file = "patents/measures/firm_level_patent_measures.csv"
in.patent_data <- read.csv(patent_data.file, header = TRUE, stringsAsFactors = FALSE)
head(in.patent_data)
# mac os or linux
setwd("/Users/sarora/dev/EAGER/data/")
# load firm patent data
# patent_data.file = "patents\\measures\\firm_level_patent_measures.csv"
patent_data.file = "patents/measures/firm_level_patent_measures.csv"
in.patent_data <- read.csv(patent_data.file, header = TRUE, stringsAsFactors = FALSE)
head(in.patent_data)
nrow (in.patent_data)
in.patent_data[grep("\\/", in.patent_data$organization_clnd, perl=TRUE),]
# join firm-level patent variables with topic panel variables
joined.patents_topics <- in.depth0_topics %>% inner_join (in.patent_data, by=c("firm" = "organization_clnd"))
nrow(joined.patents_topics)
head(joined.patents_topics)
# introduce covariates
eager.msm2 <- msm(main_topic ~ para_order, covariates = ~ mean_citations_3_by_firm + first_year, subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
eager.msm2
# introduce covariates
eager.msm2 <- msm(main_topic ~ para_order, covariates = ~ mean_citations_3_by_firm + first_year + num_patents_all + mean_assignees_all + mean_inventors_all
, subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
# introduce covariates
eager.msm2 <- msm(main_topic ~ para_order, covariates = ~ mean_citations_3_by_firm + first_year ,subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
# introduce covariates
eager.msm2 <- msm(main_topic ~ para_order, covariates = ~ num_words + prob ,subject = gid, data = in.depth0_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
data.class(in.depth0_topics$num_words)
data.class(joined.patents_topics$mean_citations_3)
data.class(in.depth0_topics)
data.class(joined.patents_topics)
# introduce covariates
eager.msm2 <- msm(main_topic ~ para_order, covariates = ~ num_words + prob ,subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
# introduce covariates
eager.msm2 <- msm(main_topic ~ para_order, covariates = ~ mean_citations_3_by_firm,subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
View(mean_inventors_3_by_size)
# mac os or linux
setwd("/Users/sarora/dev/EAGER/data/")
# copy the label vector from jupyter notebook
labels <-
c("product|2018|materi", "system|servic|technolog", "servic|technolog|solut", "inform|product|polici", "solut|technolog|use", "product|2018|busi")
# load firm patent data
# patent_data.file = "patents\\measures\\firm_level_patent_measures.csv"
patent_data.file = "patents/measures/firm_level_patent_measures.csv"
in.patent_data <- read.csv(patent_data.file, header = TRUE, stringsAsFactors = FALSE)
head(in.patent_data)
nrow (in.patent_data)
in.patent_data[grep("\\/", in.patent_data$organization_clnd, perl=TRUE),]
# load data and clean
# depth0_topics.file <- "orgs\\depth0_boilerpipe\\out_topics.csv"
depth0_topics.file <- "orgs/depth0_boilerpipe/out_topics.csv"
in.depth0_topics <- read.csv(depth0_topics.file, header = TRUE, stringsAsFactors = FALSE)
head(in.depth0_topics)
nrow(in.depth0_topics)
in.depth0_topics$main_topic <- in.depth0_topics$main_topic + 1
unique(in.depth0_topics$main_topic)
num_topics <- length(unique(in.depth0_topics$main_topic))
num_topics
cnt_by_topic <- in.depth0_topics %>% count(main_topic)
cnt_by_topic
# percentage of topics overall all paragraphs in dataset
p0 <- cnt_by_topic$n / sum(cnt_by_topic$n)
p0
# assign groups and view
groups <- in.depth0_topics %>% group_indices(firm)
in.depth0_topics$gid <- groups
# state table (msm)
head(in.depth0_topics)
st <- statetable.msm(main_topic, gid, data = in.depth0_topics)
rownames(st) <- colnames(st) <- labels
st
prop.table(st, 1) # state changes by row percentages
# visualization the state matrix in igraph
net=graph.adjacency(st,mode="directed",weighted=TRUE,diag=FALSE)
# compute node degrees (#links) and use that to set node size:
deg <- degree(net, mode="all")
V(net)$size <- deg*3
E(net)$width <- log(E(net)$weight)
E(net)$arrow.size <- 1
graph_attr(net, "layout") <- layout_with_lgl
plot.igraph(net,vertex.label=V(net)$name,layout=layout_with_lgl, edge.curved=.4, vertex.label.color="black", edge.color="gray80",
vertex.color="light blue", vertex.frame.color="light blue", rescale=TRUE)
# stationary distribution of a Markov chain (igraph)
w <- random_walk(net, start = 1, steps = 1000, mode = "out")
ec <- eigen_centrality(net, directed = TRUE)$vector
pg <- page_rank(net, damping = 0.999)$vector
# correlations
cor(table(w), ec)
cor(table(w), pg)
# msm
qm <- matrix(rep (1, num_topics^2), nrow=num_topics, ncol=num_topics)
diag(qm) <- 0
rownames(qm) <- colnames(qm) <- labels
qm
# join firm-level patent variables with topic panel variables
joined.patents_topics <- in.depth0_topics %>% inner_join (in.patent_data, by=c("firm" = "organization_clnd"))
nrow(joined.patents_topics)
head(joined.patents_topics)
# base model
eager.msm1 <- msm(main_topic ~ para_order, subject = gid, data = in.depth0_topics, exacttimes = TRUE, qmatrix = qm, gen.inits=TRUE)
eager.msm1
pmatrix.msm(eager.msm1, t = 2, ci = "normal")
# introduce covariates
eager.msm2 <- msm(main_topic ~ para_order, covariates = ~ mean_citations_3_by_firm,subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
head(joined.patents_topics)
# introduce covariates
eager.msm2 <- msm(main_topic ~ para_order, covariates = ~ mean_citations_3,subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
eager.msm2
hazard.msm(eager.msm2)
head(joined.patents_topics)
# more covariates
eager.msm2 <- msm(main_topic ~ para_order, covariates = ~ mean_citations_3 + first_year + num_patents_all + mean_assignees_all + mean_inventors_3, subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
eager.msm2
hazard.msm(eager.msm2)
# compare models
lrtest.msm(eager.msm1, eager.msm2)
# compare models
lrtest.msm(eager.msm1, eager.msm2)
# more covariates
eager.msm3 <- msm(main_topic ~ para_order, covariates = ~ mean_citations_3 + first_year + num_patents_all + mean_assignees_all + mean_inventors_3, subject = gid, data = joined.patents_topics, qmatrix = qm, exacttimes = TRUE, gen.inits=TRUE, control = list(fnscale = 4000, maxit = 10000))
